(ns colors
  (:require [clojure2d.core :refer :all]
            [clojure2d.color :as c]
            [fastmath.core :as m]
            [fastmath.vector :as v]
            [clojure2d.extra.utils :as u]
            [fastmath.clustering :as cl]
            [clojure2d.pixels :as p]
            [fastmath.stats :as stat]))

(def canv (canvas 800 300))

(def window (show-window {:canvas canv}))

(with-canvas [c canv] 
  (let [col (c/resample 112 (c/colourlovers-palettes 5) :LAB :cubic-spline)
        p0 (c/gradient col)
        p1 (c/gradient (c/colourlovers-palettes 5))]
    (dotimes [x (width c)]
      (let [t (m/norm x 0 (width c) 0 1)]
        (set-color c (p0 t))
        (line c x 0 x 150)
        (set-color c (p1 t))
        (line c x 150 x 300)))))

;;

(def img (p/load-pixels "docs/samurai.jpg"))

(let [img (p/load-pixels "aaa1.jpg")
      ratio (/ 1.0 (max (width img) (height img)))
      ns 600.0
      cls 6
      nw (* ratio ns (width img))
      nh (* ratio ns (height img))
      pal (c/reduce-colors :LAB (->> (resize img nw nh)
                                     ;; (p/filter-channels p/median)
                                     ) cls)]
  (println nw nh)
  (u/show-palette pal)
  (u/show-gradient (c/gradient :LAB :cubic-spline pal))
  )

(defn local-resize
  [img ns]
  (let [w (width img)
        h (height img)
        mwh (max w h)
        ratio (/ mwh)
        nw (* ratio ns w)
        nh (* ratio ns h)]
    (if (> ns mwh)
      img
      (resize img nw nh))))

;;

(comment save (:buffer (u/show-gradient (c/gradient :LAB :cubic-spline (c/reduce-colors :LAB (resize (p/load-pixels "generateme/gradients/k2.jpg") 600 600) 6)))) "b5grad.jpg")

(u/show-gradient (c/gradient :RGB :cubic-spline [0.1 0.35 0.75] (c/reduce-colors :LAB (local-resize (p/load-pixels "generateme/grad/prl10.jpg") 600) 3)))

;; (u/show-gradient (c/gradient :LAB :cubic-spline (c/reduce-colors :LAB (p/filter-channels p/median (resize img 600 600)) 4)))

;;



(def ^{:doc "Palettes taken from images"
       :metadoc/categories #{:pal}} palettes-images
  {:k2 '([0.4113482181302168, 0.7654335528693236, 10.992247503581464, 255.0] [0.22061087801919138, 62.95308516147251, 143.36625434970534, 255.0] [14.456361206680231, 83.01644652628998, 160.63248513207887, 255.0] [56.2006580334195, 132.6336074038975, 200.55892997048295, 255.0] [127.369257346748, 191.58760556287123, 236.15585077189115, 255.0] [254.81532816694084, 255.0744678455372, 254.87237723195426, 255.0])
   :k2b '([10.3881796935232, 32.06677355252445, 75.39140006088721, 255.0] [19.351729266643563, 57.72422893906951, 128.30134963880397, 255.0] [148.2897398287252, 183.3436537239422, 211.82830156200507, 255.0] [222.90167413854766, 232.7120359623188, 241.72338629444977, 255.0])
   :road-dubai '([32.6393594293625, 46.281295964576934, 59.57356199376628, 255.0] [233.17102229055934, 184.68752890208228, 144.55829790294206, 255.0] [244.68546295625484, 195.45608515013302, 154.92438050553642, 255.0] [245.09929596284874, 218.08638324946338, 208.74921795045734, 255.0])
   :ethiopia-beckwith-fischer '([-0.2326252787934594, 0.08300046208669531, -0.1372086711319381, 255.0] [82.0349924521415, 63.67276673909004, 54.2884030520438, 255.0] [177.58808103089592, 145.46078318309068, 104.53234975128821, 255.0] [254.81532816694084, 255.0744678455372, 254.87237723195426, 255.0])
   :maurizummo '([1.197695163065406, 1.5134262010185038, 1.2928715418442345, 255.0] [44.053640173903325, 59.62054293719374, 49.803238000268045, 255.0] [162.12581921688079, 159.665319364655, 141.91024664871063, 255.0] [204.17644476822295, 200.55289091972827, 188.6054303629103, 255.0])
   :guerreiro '([1.525729560410939, 26.307761616217558, 23.17239250610738, 255.0] [26.012307143990885, 54.29461429416537, 57.775770217858785, 255.0] [72.67097238099743, 83.09823488052274, 84.68135625834721, 255.0] [140.12944307732434, 117.50297794501442, 111.82266257754186, 255.0] [252.9463761712598, 188.54432903171156, 176.55547310302512, 255.0])
   :two-heads-filonov '([24.460842016758622, 13.319186466937532, 11.371481719746425, 255.0] [70.2970618115852, 66.59811478304647, 150.88220402996322, 255.0] [231.81934795563782, 51.60425154939317, 18.892200403824166, 255.0] [250.29485056314277, 246.26718534934852, 228.9649823035563, 255.0])
   :glitterboy '([0.0, 0.0, 0.0, 255.0] [34.832094967759296, 51.53258449525617, 76.08897751627643, 255.0] [254.89515125022243, 255.08416964439067, 254.54087895755788, 255.0])
   :tornyai '([16.536913197539874, 35.148996010035155, 49.6490190574263, 255.0] [37.17313937364111, 65.29626990699421, 50.67791316590424, 255.0] [98.18761762111131, 126.67221289112751, 78.30493337962938, 255.0] [202.4438850642266, 191.59799331682444, 75.6924308608252, 255.0] [205.87604983243077, 194.82332684615847, 78.83846935997073, 255.0])
   :dune-poster '([107.33995301254643, 27.055313332762026, 38.47925048531382, 255.0] [155.82118800551515, 38.90429583899509, 62.35925340548446, 255.0] [183.99945094294546, 88.39591455068566, 64.51297949567373, 255.0] [220.73204002416284, 186.4585849666728, 118.40324019304026, 255.0])
   :prl1 '([13.29994985403398, 15.48845781002485, 14.86363184532867, 255.0] [101.68034192140362, 62.02739941274223, 23.02079614459207, 255.0] [138.35299872312532, 129.75667686894934, 65.2034600779777, 255.0] [169.15454856033406, 174.1653374012969, 151.24750522305126, 255.0])
   :prl2 '([43.046985452697314, -0.06827493811636616, 20.218644689729913, 255.0] [128.34049233695694, 25.699038961985888, 46.91568830236381, 255.0] [241.44626439671217, 178.95881985218566, 162.09534893102426, 255.0] [244.8006213590985, 246.45045233296074, 227.7677303310493, 255.0])
   :prl3 '([61.50262728122596, 53.74828658523728, 60.753673742911616, 255.0] [77.47529157962626, 100.23834982625017, 89.61922557794098, 255.0] [218.46051667336093, 130.57560168018827, 110.3073956175709, 255.0])
   :prl4 '([123.65261300859397, 41.43986331898571, 35.50064040876995, 255.0] [247.60423576785973, 47.56327524725518, 35.503509169735274, 255.0] [253.33093752285706, 128.56444420734425, 43.89944079224073, 255.0] [247.00764385965468, 219.3958440987627, 140.67803434636033, 255.0])
   :prl5 '([3.8290482977573905, 1.8652223272246056, 23.782273486179594, 255.0] [38.16453828311066, 38.07842354169119, 40.562483109713455, 255.0] [124.47917250188553, 46.8860488213824, 37.03042402622115, 255.0] [116.68340394316182, 116.70254121948781, 117.82259593093804, 255.0] [204.82688535629052, 210.41253869113314, 210.261336369497, 255.0] [254.89515125022243, 255.08416964439067, 254.54087895755788, 255.0])
   :prl6 '([91.0234341283588, 41.60222426927309, 31.986846129453752, 255.0] [229.16318463676487, 29.700013017335557, 5.841793052086214, 255.0] [156.12238464594444, 179.56558564011212, 64.2687167627744, 255.0] [226.2084134692385, 196.56580362093143, 168.7561397523294, 255.0])
   :prl7 '([30.0, 29.0, 35.0, 255.0] [3.0, 169.0, 217.0, 255.0] [247.0, 239.0, 236.0, 255.0])
   :prl8 '([11.111707340820754, 4.113829164875057, 5.680316944823451, 255.0] [104.83604065530469, 28.109059377246094, 5.376818940241242, 255.0] [93.13973348869847, 91.10953112041967, 112.51452179401566, 255.0] [140.13914847036114, 149.60592631159392, 96.29184203770888, 255.0] [211.89437893767288, 150.11487580629205, 63.409156284547926, 255.0])
   :prl9 '([227.196156740449, 55.071940035989655, 73.74431951629776, 255.0] [102.03660534286227, 110.87026617840641, 175.79287733452057, 255.0] [94.83619506822001, 117.84420336680716, 141.88748246791656, 255.0] [254.7254945449911, 249.18544480490488, 250.4106982164419, 255.0])
   :prl10 '([32.94738281709724, 34.1274380898261, 38.50895242119614, 255.0] [200.74884857843253, 30.4865255859429, 43.73963717008773, 255.0] [62.41560521711818, 143.56878761416803, 154.89709282983696, 255.0])})

(def ^{:doc "Gradients taken from images"
       :metadoc/categories #{:pal}} gradients-images
  (into {} (map (fn [[k v]] [k (c/gradient :LAB :cubic-spline v)]) palettes-images)))
